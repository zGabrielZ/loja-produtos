server:
  port: 8082
  servlet:
    context-path: '/api-notificacao/'

spring:
  application:
    name: notificacao
  datasource:
    url: jdbc:postgresql://localhost:5000/notificacao?currentSchema=dev
    username: gabriel
    password: gabriel
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  mail:
    host: ${SMTP}
    port: ${SMTP_PORTA}
    username: ${EMAIL_REMETENTE}
    password: ${SENHA_REMETENTE}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  rabbitmq:
    host: localhost
    port: 5672
    username: gabriel
    password: gabriel
    listener:
      simple:
        default-requeue-rejected: false #NÃ£o faz o loop quando der o exception

broker:
  exchange:
    pedido:
      notificacao:
        event: ms.produto.notificacaoevent
        dlx: ms.produto.notificacaoevent.dlx
        pl: ms.produto.notificacaoevent.pl
  key:
    pedido:
      notificacao:
        event: ms.produto.notificacaoevent.key
        dlx: ms.produto.notificacaoevent.key.dlx
        pl: ms.produto.notificacaoevent.key.pl
  queue:
    pedido:
      notificacao:
        event: ms.produto.notificacaoevent.queue
        dlq: ms.produto.notificacaoevent.queue.dlq
        pl: ms.produto.notificacaoevent.queue.pl

logging:
  level:
    org:
      flywaydb: DEBUG
    br.com.gabrielferreira.notificacao: TRACE

produtos:
  service:
    registry:
      username: serviceregistry
      password: produtos123sr

jwt:
  secret: ${JWT_SECRET:b(6_jX4*NDhHQxGk8#7wA96bf?._h(EyRtqT8z*@K#6Ux3a!t+}

eureka:
  client:
    service-url:
      defaultZone: 'http://${produtos.service.registry.username}:${produtos.service.registry.password}@localhost:8761/eureka'
  instance:
    hostname: localhost